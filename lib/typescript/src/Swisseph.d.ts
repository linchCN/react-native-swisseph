declare const Swisseph: {
    SE_JUL_CAL: number;
    SE_GREG_CAL: number;
    SE_ECL_NUT: number;
    SE_SUN: number;
    SE_MOON: number;
    SE_MERCURY: number;
    SE_VENUS: number;
    SE_EARTH: number;
    SE_MARS: number;
    SE_JUPITER: number;
    SE_SATURN: number;
    SE_URANUS: number;
    SE_NEPTUNE: number;
    SE_PLUTO: number;
    SE_MEAN_NODE: number;
    SE_TRUE_NODE: number;
    SE_MEAN_APOG: number;
    SE_OSCU_APOG: number;
    SE_INTP_APOG: number;
    SE_INTP_PERG: number;
    SE_CHIRON: number;
    SE_PHOLUS: number;
    SE_CERES: number;
    SE_PALLAS: number;
    SE_JUNO: number;
    SE_VESTA: number;
    SE_NPLANETS: number;
    SE_AST_OFFSET: number;
    SE_VARUNA: number;
    SE_FICT_OFFSET: number;
    SE_FICT_OFFSET_1: number;
    SE_FICT_MAX: number;
    SE_NFICT_ELEM: number;
    SE_COMET_OFFSET: number;
    SE_NALL_NAT_POINTS: number;
    SE_CUPIDO: number;
    SE_HADES: number;
    SE_ZEUS: number;
    SE_KRONOS: number;
    SE_APOLLON: number;
    SE_ADMETOS: number;
    SE_VULKANUS: number;
    SE_POSEIDON: number;
    SE_ISIS: number;
    SE_NIBIRU: number;
    SE_HARRINGTON: number;
    SE_NEPTUNE_LEVERRIER: number;
    SE_NEPTUNE_ADAMS: number;
    SE_PLUTO_LOWELL: number;
    SE_PLUTO_PICKERING: number;
    SE_VULCAN: number;
    SE_WHITE_MOON: number;
    SE_PROSERPINA: number;
    SE_WALDEMATH: number;
    SE_FIXSTAR: number;
    SE_ASC: number;
    SE_MC: number;
    SE_ARMC: number;
    SE_VERTEX: number;
    SE_EQUASC: number;
    SE_COASC1: number;
    SE_COASC2: number;
    SE_POLASC: number;
    SE_NASCMC: number;
    /**
     * flag bits for parameter iflag in function swe_calc ()
     * The flag bits are defined in such a way that iflag : 0 delivers what one
     * usually wants:
     *  - the default ephemeris (SWISS EPHEMERIS) is used,
     *  - apparent geocentric positions referring to the true equinox of date
     *    are returned.
     * If not only coordinates, but also speed values are required, use
     * flag : SEFLG_SPEED.
     *
     * The 'L' behind the number indicates that 32-bit integers (Long) are used.
     */
    SEFLG_JPLEPH: number;
    SEFLG_SWIEPH: number;
    SEFLG_MOSEPH: number;
    SEFLG_HELCTR: number;
    SEFLG_TRUEPOS: number;
    SEFLG_J2000: number;
    SEFLG_NONUT: number;
    SEFLG_SPEED3: number;
    SEFLG_SPEED: number;
    SEFLG_NOGDEFL: number;
    SEFLG_NOABERR: number;
    SEFLG_EQUATORIAL: number;
    SEFLG_XYZ: number;
    SEFLG_RADIANS: number;
    SEFLG_BARYCTR: number;
    SEFLG_TOPOCTR: number;
    SEFLG_SIDEREAL: number;
    SEFLG_ICRS: number;
    SE_SIDBITS: number;
    SE_SIDBIT_ECL_T0: number;
    SE_SIDBIT_SSY_PLANE: number;
    SE_SIDM_FAGAN_BRADLEY: number;
    SE_SIDM_LAHIRI: number;
    SE_SIDM_DELUCE: number;
    SE_SIDM_RAMAN: number;
    SE_SIDM_USHASHASHI: number;
    SE_SIDM_KRISHNAMURTI: number;
    SE_SIDM_DJWHAL_KHUL: number;
    SE_SIDM_YUKTESHWAR: number;
    SE_SIDM_JN_BHASIN: number;
    SE_SIDM_BABYL_KUGLER1: number;
    SE_SIDM_BABYL_KUGLER2: number;
    SE_SIDM_BABYL_KUGLER3: number;
    SE_SIDM_BABYL_HUBER: number;
    SE_SIDM_BABYL_ETPSC: number;
    SE_SIDM_ALDEBARAN_15TAU: number;
    SE_SIDM_HIPPARCHOS: number;
    SE_SIDM_SASSANIAN: number;
    SE_SIDM_GALCENT_0SAG: number;
    SE_SIDM_J2000: number;
    SE_SIDM_J1900: number;
    SE_SIDM_B1950: number;
    SE_SIDM_USER: number;
    SE_NSIDM_PREDEF: number;
    SE_NODBIT_MEAN: number;
    SE_NODBIT_OSCU: number;
    SE_NODBIT_OSCU_BAR: number;
    SE_NODBIT_FOPOINT: number;
    SEFLG_DEFAULTEPH: number;
    SE_MAX_STNAME: number;
    SE_ECL_CENTRAL: number;
    SE_ECL_NONCENTRAL: number;
    SE_ECL_TOTAL: number;
    SE_ECL_ANNULAR: number;
    SE_ECL_PARTIAL: number;
    SE_ECL_ANNULAR_TOTAL: number;
    SE_ECL_PENUMBRAL: number;
    SE_ECL_ALLTYPES_SOLAR: number;
    SE_ECL_ALLTYPES_LUNAR: number;
    SE_ECL_VISIBLE: number;
    SE_ECL_MAX_VISIBLE: number;
    SE_ECL_1ST_VISIBLE: number;
    SE_ECL_2ND_VISIBLE: number;
    SE_ECL_3RD_VISIBLE: number;
    SE_ECL_4TH_VISIBLE: number;
    SE_ECL_ONE_TRY: number;
    SE_CALC_RISE: number;
    SE_CALC_SET: number;
    SE_CALC_MTRANSIT: number;
    SE_CALC_ITRANSIT: number;
    SE_BIT_DISC_CENTER: number;
    SE_BIT_DISC_BOTTOM: number;
    SE_BIT_NO_REFRACTION: number;
    SE_BIT_CIVIL_TWILIGHT: number;
    SE_BIT_NAUTIC_TWILIGHT: number;
    SE_BIT_ASTRO_TWILIGHT: number;
    SE_BIT_FIXED_DISC_SIZE: number;
    SE_ECL2HOR: number;
    SE_EQU2HOR: number;
    SE_HOR2ECL: number;
    SE_HOR2EQU: number;
    SE_TRUE_TO_APP: number;
    SE_APP_TO_TRUE: number;
    SE_SPLIT_DEG_ROUND_SEC: number;
    SE_SPLIT_DEG_ROUND_MIN: number;
    SE_SPLIT_DEG_ROUND_DEG: number;
    SE_SPLIT_DEG_ZODIACAL: number;
    SE_SPLIT_DEG_KEEP_SIGN: number;
    SE_SPLIT_DEG_KEEP_DEG: number;
    SE_HELIACAL_RISING: number;
    SE_HELIACAL_SETTING: number;
    SE_MORNING_FIRST: number;
    SE_EVENING_LAST: number;
    SE_EVENING_FIRST: number;
    SE_MORNING_LAST: number;
    SE_ACRONYCHAL_RISING: number;
    SE_ACRONYCHAL_SETTING: number;
    SE_COSMICAL_SETTING: number;
    SE_HELFLAG_LONG_SEARCH: number;
    SE_HELFLAG_HIGH_PRECISION: number;
    SE_HELFLAG_OPTICAL_PARAMS: number;
    SE_HELFLAG_NO_DETAILS: number;
    SE_HELFLAG_SEARCH_1_PERIOD: number;
    SE_HELFLAG_VISLIM_DARK: number;
    SE_HELFLAG_VISLIM_NOMOON: number;
    SE_HELFLAG_VISLIM_PHOTOPIC: number;
    SE_HELFLAG_AVKIND_VR: number;
    SE_HELFLAG_AVKIND_PTO: number;
    SE_HELFLAG_AVKIND_MIN7: number;
    SE_HELFLAG_AVKIND_MIN9: number;
    SE_HELFLAG_AVKIND: number;
    TJD_INVALID: number;
    SIMULATE_VICTORVB: number;
    SE_PHOTOPIC_FLAG: number;
    SE_SCOTOPIC_FLAG: number;
    SE_MIXEDOPIC_FLAG: number;
};
export default Swisseph;
//# sourceMappingURL=Swisseph.d.ts.map